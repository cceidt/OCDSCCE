db.releases.find().forEach(function(el){
    el.date = new Date(el.date);
    if (el.contracts instanceof Array){
            el.contracts.forEach(function(e){
                e.dateSigned = new Date(e.dateSigned);
                e.period.startDate= new Date(e.period.startDate);
                e.period.endDate= new Date(e.period.endDate);
                if (e.documents instanceof Array){
                    e.documents.forEach(function(d){
                        d.datePublished= new Date(d.datePublished);
                        d.dateModified= new Date(d.dateModified);;
                        });
                    }
            });
        }
    if (el.awards instanceof Array){
            el.awards.forEach(function(e){
                if (e.date){
                    e.date = new Date(e.date);
                    if (e.documents instanceof Array){
                        e.documents.forEach(function(d){
                            d.datePublished= new Date(d.datePublished);
                            d.dateModified= new Date(d.dateModified);;
                            });
                        }
                    }
            });
        }
    if (el.tender){
        if (el.tender.tenderPeriod){
            el.tender.tenderPeriod.startDate = new Date(el.tender.tenderPeriod.startDate);
            el.tender.tenderPeriod.endDate = new Date(el.tender.tenderPeriod.endDate);
            }
        if (el.tender.enquiryPeriod){
            el.tender.enquiryPeriod.startDate = new Date(el.tender.enquiryPeriod.startDate);
            el.tender.enquiryPeriod.endDate = new Date(el.tender.enquiryPeriod.endDate);
            }
        if (el.tender.documents instanceof Array){
            el.tender.documents.forEach(function(d){
                d.datePublished= new Date(d.datePublished);
                d.dateModified= new Date(d.dateModified);;
                });
            }
        }
    db.releases.save(el)
});

db.getCollection('releases').ensureIndex({"ocid" : 1})
db.getCollection('releases').ensureIndex({"date" : 1})


mongo --eval "var collection = 'releases', db_name='prueba'" mongo-update-date.js

mongoimport --db prueba --collection releases --type json --file /home/juandavidvallejo/Descargas/prueba-ocds.json --jsonArray --batchSize=1 --upsertFields ocid


db.getCollection('awards').ensureIndex({"id_release" : 1})
db.getCollection('contracts').ensureIndex({"id_release" : 1})
db.getCollection('planning').ensureIndex({"id_release" : 1})
db.getCollection('planningDocuments').ensureIndex({"id_release" : 1})
db.getCollection('tenderDocuments').ensureIndex({"id_release" : 1})
db.getCollection('awardDocuments').ensureIndex({"id_release" : 1})
db.getCollection('contractDocuments').ensureIndex({"id_release" : 1})
db.getCollection('milestones').ensureIndex({"id_release" : 1})
db.getCollection('packagemetadata').ensureIndex({"num_constancia" : 1})
db.getCollection('packagemetadata').ensureIndex({"publishedDate" : 1})



#Version en produccion de OCDS 20161005
#entity
var map = function () {
    for (var j=0; j< this.releases.length; j++){
        var key = {
            name: this.releases[j].buyer.name,
            nit: this.releases[j].buyer.identifier.id_ident
        };
        var value = {
            count:1
        };
        emit(key, value);
    }
}


var reduce = function (key, values) {
   var result = { count: 0 };
    values.forEach(function (value) {
        result.count += value.count;
    });
    return result;

   }


db.packagemetadata.mapReduce(map,reduce,{out:'entity'});

#status
var map = function () {
    for (var j=0; j< this.releases.length; j++){
        var key = {
            name: this.releases[j].tender.status
            };
        var value = {
            count:1
        };
        emit(key, value);
    }
}


var reduce = function (key, values) {
   var result = { count: 0 };
    values.forEach(function (value) {
        result.count += value.count;
    });
    return result;

   }
db.packagemetadata.mapReduce(map,reduce,{out:'status'}); 

#Procurement o modalidad de contrataciÃ³n
var map = function () {
    var key = {
        name: this.procurement_type,
    };
    var value = {
        count:1
    };
    emit(key, value);
}


var reduce = function (key, values) {
   var result = { count: 0 };
    values.forEach(function (value) {
        result.count += value.count;
    });
    return result;

   }
db.packagemetadata.mapReduce(map,reduce,{out:'procurement_type'});